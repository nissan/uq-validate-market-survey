CREATE TABLE survey_responses (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  answers JSONB NOT NULL,
  email TEXT NOT NULL,
  name TEXT NOT NULL,
  can_contact BOOLEAN NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Add a policy to enable row-level security
ALTER TABLE survey_responses ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows inserting data for authenticated and anonymous users
CREATE POLICY "Allow anonymous inserts" ON survey_responses FOR INSERT TO anon WITH CHECK (true);

-- Grant necessary permissions to the anon role
GRANT INSERT ON survey_responses TO anon;

-- Enable Row Level Security
ALTER TABLE survey_responses ENABLE ROW LEVEL SECURITY;

-- Create a policy to allow anonymous read access
CREATE POLICY "Allow anonymous read access"
ON survey_responses
FOR SELECT
TO anon
USING (true);

-- Create a policy to allow anonymous insert access
CREATE POLICY "Allow anonymous insert access"
ON survey_responses
FOR INSERT
TO anon
WITH CHECK (true);

-- Grant necessary permissions to the anon role
GRANT SELECT, INSERT ON survey_responses TO anon;

CREATE TABLE surveys (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title TEXT NOT NULL,
  description TEXT,
  questions JSONB NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

ALTER TABLE survey_responses ADD COLUMN survey_id BIGINT REFERENCES surveys(id);

-- Add policies for the new table
ALTER TABLE surveys ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow anonymous read access on surveys"
ON surveys FOR SELECT TO anon USING (true);

CREATE POLICY "Allow anonymous insert access on surveys"
ON surveys FOR INSERT TO anon WITH CHECK (true);

GRANT SELECT, INSERT ON surveys TO anon;

ALTER TABLE survey_responses ADD COLUMN survey_id BIGINT REFERENCES surveys(id);